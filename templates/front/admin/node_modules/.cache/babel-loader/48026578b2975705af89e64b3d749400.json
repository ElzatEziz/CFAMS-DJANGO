{"remainingRequest":"/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/node_modules/babel-loader/lib/index.js!/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/src/components/common/FileUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/src/components/common/FileUpload.vue","mtime":1713897700414},{"path":"/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/node_modules/cache-loader/dist/cjs.js","mtime":1713897695165},{"path":"/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/node_modules/babel-loader/lib/index.js","mtime":1713897694753},{"path":"/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/node_modules/cache-loader/dist/cjs.js","mtime":1713897695165},{"path":"/Applications/Develop/CFAMS-Django-Vue/templates/front/admin/node_modules/vue-loader/lib/index.js","mtime":1713897700024}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBzdG9yYWdlIGZyb20gIkAvdXRpbHMvc3RvcmFnZSI7CmltcG9ydCBiYXNlIGZyb20gIkAvdXRpbHMvYmFzZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5p+l55yL5aSn5Zu+CiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAvLyDmn6XnnIvlpKflm74KICAgICAgZGlhbG9nSW1hZ2VVcmw6ICIiLAogICAgICAvLyDnu4Tku7bmuLLmn5Plm77niYfnmoTmlbDnu4TlrZfmrrXvvIzmnInnibnmrormoLzlvI/opoHmsYIKICAgICAgZmlsZUxpc3Q6IFtdLAogICAgICBmaWxlVXJsTGlzdDogW10sCiAgICAgIG15SGVhZGVyczoge30KICAgIH07CiAgfSwKICBwcm9wczogWyJ0aXAiLCAiYWN0aW9uIiwgImxpbWl0IiwgIm11bHRpcGxlIiwgImZpbGVVcmxzIl0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdCgpOwogICAgdGhpcy5teUhlYWRlcnMgPSB7CiAgICAgICdUb2tlbic6IHN0b3JhZ2UuZ2V0KCJUb2tlbiIpCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbGVVcmxzOiBmdW5jdGlvbiBmaWxlVXJscyh2YWwsIG9sZFZhbCkgewogICAgICAvLyAgIGNvbnNvbGUubG9nKCJuZXc6ICVzLCBvbGQ6ICVzIiwgdmFsLCBvbGRWYWwpOwogICAgICB0aGlzLmluaXQoKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDorqHnrpflsZ7mgKfnmoQgZ2V0dGVyCiAgICBnZXRBY3Rpb25Vcmw6IGZ1bmN0aW9uIGdldEFjdGlvblVybCgpIHsKICAgICAgLy8gcmV0dXJuIGJhc2UudXJsICsgdGhpcy5hY3Rpb24gKyAiP3Rva2VuPSIgKyBzdG9yYWdlLmdldCgidG9rZW4iKTsKICAgICAgcmV0dXJuICIvIi5jb25jYXQodGhpcy4kYmFzZS5uYW1lLCAiLyIpICsgdGhpcy5hY3Rpb247CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJ3lp4vljJYKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIC8vICAgY29uc29sZS5sb2codGhpcy5maWxlVXJscyk7CiAgICAgIGlmICh0aGlzLmZpbGVVcmxzKSB7CiAgICAgICAgdGhpcy5maWxlVXJsTGlzdCA9IHRoaXMuZmlsZVVybHMuc3BsaXQoIiwiKTsKICAgICAgICB2YXIgZmlsZUFycmF5ID0gW107CiAgICAgICAgdGhpcy5maWxlVXJsTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgdmFyIHVybCA9IGl0ZW07CiAgICAgICAgICB2YXIgbmFtZSA9IGluZGV4OwogICAgICAgICAgdmFyIGZpbGUgPSB7CiAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgIHVybDogdXJsCiAgICAgICAgICB9OwogICAgICAgICAgZmlsZUFycmF5LnB1c2goZmlsZSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5zZXRGaWxlTGlzdChmaWxlQXJyYXkpOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlQmVmb3JlVXBsb2FkOiBmdW5jdGlvbiBoYW5kbGVCZWZvcmVVcGxvYWQoZmlsZSkge30sCiAgICAvLyDkuIrkvKDmlofku7bmiJDlip/lkI7miafooYwKICAgIGhhbmRsZVVwbG9hZFN1Y2Nlc3M6IGZ1bmN0aW9uIGhhbmRsZVVwbG9hZFN1Y2Nlc3MocmVzLCBmaWxlLCBmaWxlTGlzdCkgewogICAgICBpZiAocmVzICYmIHJlcy5jb2RlID09PSAwKSB7CiAgICAgICAgZmlsZUxpc3RbZmlsZUxpc3QubGVuZ3RoIC0gMV1bInVybCJdID0gInVwbG9hZC8iICsgZmlsZS5yZXNwb25zZS5maWxlOwogICAgICAgIHRoaXMuc2V0RmlsZUxpc3QoZmlsZUxpc3QpOwogICAgICAgIHRoaXMuJGVtaXQoImNoYW5nZSIsIHRoaXMuZmlsZVVybExpc3Quam9pbigiLCIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9CiAgICB9LAogICAgLy8g5Zu+54mH5LiK5Lyg5aSx6LSlCiAgICBoYW5kbGVVcGxvYWRFcnI6IGZ1bmN0aW9uIGhhbmRsZVVwbG9hZEVycihlcnIsIGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuaWh+S7tuS4iuS8oOWksei0pSIpOwogICAgfSwKICAgIC8vIOenu+mZpOWbvueJhwogICAgaGFuZGxlUmVtb3ZlOiBmdW5jdGlvbiBoYW5kbGVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgdGhpcy5zZXRGaWxlTGlzdChmaWxlTGlzdCk7CiAgICAgIHRoaXMuJGVtaXQoImNoYW5nZSIsIHRoaXMuZmlsZVVybExpc3Quam9pbigiLCIpKTsKICAgIH0sCiAgICAvLyDmn6XnnIvlpKflm74KICAgIGhhbmRsZVVwbG9hZFByZXZpZXc6IGZ1bmN0aW9uIGhhbmRsZVVwbG9hZFByZXZpZXcoZmlsZSkgewogICAgICB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gZmlsZS51cmw7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgLy8g6ZmQ5Yi25Zu+54mH5pWw6YePCiAgICBoYW5kbGVFeGNlZWQ6IGZ1bmN0aW9uIGhhbmRsZUV4Y2VlZChmaWxlcywgZmlsZUxpc3QpIHsKICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCJcdTY3MDBcdTU5MUFcdTRFMEFcdTRGMjAiLmNvbmNhdCh0aGlzLmxpbWl0LCAiXHU1RjIwXHU1NkZFXHU3MjQ3IikpOwogICAgfSwKICAgIC8vIOmHjeaWsOWvuWZpbGVMaXN06L+b6KGM6LWL5YC8CiAgICBzZXRGaWxlTGlzdDogZnVuY3Rpb24gc2V0RmlsZUxpc3QoZmlsZUxpc3QpIHsKICAgICAgdmFyIGZpbGVBcnJheSA9IFtdOwogICAgICB2YXIgZmlsZVVybEFycmF5ID0gW107IC8vIOacieS6m+WbvueJh+S4jeaYr+WFrOW8gOeahO+8jOaJgOS7pemcgOimgeaQuuW4pnRva2Vu5L+h5oGv5YGa5p2D6ZmQ5qCh6aqMCgogICAgICB2YXIgdG9rZW4gPSBzdG9yYWdlLmdldCgidG9rZW4iKTsKCiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBmaWxlTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgIHZhciB1cmwgPSBpdGVtLnVybC5zcGxpdCgiPyIpWzBdOwoKICAgICAgICBpZiAoIXVybC5zdGFydHNXaXRoKCJodHRwIikpIHsKICAgICAgICAgIHVybCA9IF90aGlzLiRiYXNlLnVybCArIHVybDsKICAgICAgICB9CgogICAgICAgIHZhciBuYW1lID0gaXRlbS5uYW1lOwogICAgICAgIHZhciBmaWxlID0gewogICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgIHVybDogdXJsICsgIj90b2tlbj0iICsgdG9rZW4KICAgICAgICB9OwogICAgICAgIGZpbGVBcnJheS5wdXNoKGZpbGUpOwogICAgICAgIGZpbGVVcmxBcnJheS5wdXNoKHVybCk7CiAgICAgIH0pOwogICAgICB0aGlzLmZpbGVMaXN0ID0gZmlsZUFycmF5OwogICAgICB0aGlzLmZpbGVVcmxMaXN0ID0gZmlsZVVybEFycmF5OwogICAgfSwKICAgIC8vIOiOt+WPluWbvueJh+WcsOWdgAogICAgZ2V0SW1nVXJsOiBmdW5jdGlvbiBnZXRJbWdVcmwoKSB7CiAgICAgIHJldHVybiB0aGlzLmZpbGVVcmxMaXN0LmpvaW4oIiwiKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["FileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 上传文件组件 -->\n    <el-upload\n      ref=\"upload\"\n      :action=\"getActionUrl\"\n      list-type=\"picture-card\"\n      :multiple=\"multiple\"\n      :limit=\"limit\"\n      :headers=\"myHeaders\"\n      :file-list=\"fileList\"\n      :on-exceed=\"handleExceed\"\n      :on-preview=\"handleUploadPreview\"\n      :on-remove=\"handleRemove\"\n      :on-success=\"handleUploadSuccess\"\n      :on-error=\"handleUploadErr\"\n      :before-upload=\"handleBeforeUpload\"\n    >\n      <i class=\"el-icon-plus\"></i>\n      <div slot=\"tip\" class=\"el-upload__tip\" style=\"color:#838fa1;\">{{tip}}</div>\n    </el-upload>\n    <el-dialog :visible.sync=\"dialogVisible\" size=\"tiny\" append-to-body>\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport storage from \"@/utils/storage\";\nimport base from \"@/utils/base\";\nexport default {\n  data() {\n    return {\n      // 查看大图\n      dialogVisible: false,\n      // 查看大图\n      dialogImageUrl: \"\",\n      // 组件渲染图片的数组字段，有特殊格式要求\n      fileList: [],\n      fileUrlList: [],\n      myHeaders:{}\n    };\n  },\n  props: [\"tip\", \"action\", \"limit\", \"multiple\", \"fileUrls\"],\n  mounted() {\n    this.init();\n    this.myHeaders= {\n      'Token':storage.get(\"Token\")\n    }\n  },\n  watch: {\n    fileUrls: function(val, oldVal) {\n      //   console.log(\"new: %s, old: %s\", val, oldVal);\n      this.init();\n    }\n  },\n  computed: {\n    // 计算属性的 getter\n    getActionUrl: function() {\n      // return base.url + this.action + \"?token=\" + storage.get(\"token\");\n      return `/${this.$base.name}/` + this.action;\n    }\n  },\n  methods: {\n    // 初始化\n    init() {\n      //   console.log(this.fileUrls);\n      if (this.fileUrls) {\n        this.fileUrlList = this.fileUrls.split(\",\");\n        let fileArray = [];\n        this.fileUrlList.forEach(function(item, index) {\n          var url = item;\n          var name = index;\n          var file = {\n            name: name,\n            url: url\n          };\n          fileArray.push(file);\n        });\n        this.setFileList(fileArray);\n      }\n    },\n    handleBeforeUpload(file) {\n\t\n    },\n    // 上传文件成功后执行\n    handleUploadSuccess(res, file, fileList) {\n      if (res && res.code === 0) {\n        fileList[fileList.length - 1][\"url\"] = \"upload/\" + file.response.file;\n        this.setFileList(fileList);\n        this.$emit(\"change\", this.fileUrlList.join(\",\"));\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 图片上传失败\n    handleUploadErr(err, file, fileList) {\n      this.$message.error(\"文件上传失败\");\n    },\n    // 移除图片\n    handleRemove(file, fileList) {\n      this.setFileList(fileList);\n      this.$emit(\"change\", this.fileUrlList.join(\",\"));\n    },\n    // 查看大图\n    handleUploadPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    // 限制图片数量\n    handleExceed(files, fileList) {\n      this.$message.warning(`最多上传${this.limit}张图片`);\n    },\n    // 重新对fileList进行赋值\n    setFileList(fileList) {\n      var fileArray = [];\n      var fileUrlArray = [];\n      // 有些图片不是公开的，所以需要携带token信息做权限校验\n      var token = storage.get(\"token\");\n      let _this = this;\n      fileList.forEach(function(item, index) {\n        var url = item.url.split(\"?\")[0];\n\tif(!url.startsWith(\"http\")) {\n\t  url = _this.$base.url+url\n\t}\n        var name = item.name;\n        var file = {\n          name: name,\n          url: url + \"?token=\" + token\n        };\n        fileArray.push(file);\n        fileUrlArray.push(url);\n      });\n      this.fileList = fileArray;\n      this.fileUrlList = fileUrlArray;\n    },\n    // 获取图片地址\n    getImgUrl() {\n      return this.fileUrlList.join(\",\");\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n</style>\n"],"sourceRoot":"src/components/common"}]}